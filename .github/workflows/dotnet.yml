# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION : <"ap-southeast-2"> 
permissions:
      id-token: write
      contents: read

jobs:     
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore
      
    - name: Test
      run: dotnet test --no-build --verbosity normal
      
  deploy:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::722545058398:role/GitHubAction-AssumeRoleWithAction
        aws-region: ap-southeast-2
        mask-aws-account-id: 'false'
        
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      with:
        mask-password: 'true'

    - name: Set up docker buildx
      uses: docker/setup-buildx-action@v2

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: |
          722545058398.dkr.ecr.ap-southeast-2.amazonaws.com/loyalty
        tags: |
          type=semver,pattern={{version}},value=1.0.0
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    
    - name: Docker build
      uses: docker/build-push-action@v4
      with:
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        platforms: linux/amd64,linux/arm64

    # - name: Build, tag, and push docker image to Amazon ECR
    #   env:
    #     ECR_REGISTRY: 722545058398.dkr.ecr.ap-southeast-2.amazonaws.com ## ${{ steps.login-ecr.outputs.registry }}
    #     ECR_REPOSITORY: loyalty
    #     IMAGE_TAG: latest
    #   run: |
    #     pwd
    #     ls
    #     docker build --tag ${ECR_REGISTRY}/$ECR_REPOSITORY:$IMAGE_TAG . -f Docker
    #     docker push ${ECR_REGISTRY}/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Force new ECS deployment
      run: 
        aws ecs update-service --cluster loyalty-services --service Loyalty-API --force-new-deployment --region ap-southeast-2
